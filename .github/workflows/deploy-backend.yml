name: backend-deploy

on:
  push:
    branches:
      - main
    paths:
      - "apps/backend/**"
      - ".github/workflows/**"
      - "!**/README.md"

permissions:
  id-token: write
  contents: read

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      # Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Linting placeholder (you can replace with flake8, black, etc.)
      - name: Lint code
        run: echo "Linting backend code"

      # Unit testing placeholder (you can replace with pytest)
      - name: Run unit tests
        run: echo "Running backend unit tests"

  build-and-push-ecr-image:
    name: Build and Push Docker Image
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'true'

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f infra/docker/Dockerfile.backend apps/backend
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy-to-ec2:
    name: Deploy to EC2
    needs: build-and-push-ecr-image
    runs-on: self-hosted
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'true'

      - name: Pull latest Docker image
        run: |
          docker pull ${{secrets.AWS_ECR_LOGIN_URI}}/${{ secrets.ECR_REPOSITORY_NAME }}:latest

      - name: Stop and remove old container
        run: |
          docker rm -f backend-container || true

      - name: Run new container with environment variables
        run: |
          docker run -d -p 8000:8000 \
            --name backend-container \
            --restart always \
            -e MONGO_URI="${{ secrets.MONGO_URI }}" \
            -e FRONTEND_URL="${{ secrets.FRONTEND_URL }}" \
            -e EMAIL_USER="${{ secrets.EMAIL_USER }}" \
            -e EMAIL_PASS="${{ secrets.EMAIL_PASS }}" \
            -e SECRET_KEY="${{ secrets.SECRET_KEY }}" \
            -e REFRESH_SECRET_KEY="${{ secrets.REFRESH_SECRET_KEY }}" \
            -e ALGORITHM="${{ secrets.ALGORITHM }}" \
            -e ENVIRONMENT=production \
            ${{secrets.AWS_ECR_LOGIN_URI}}/${{ secrets.ECR_REPOSITORY_NAME }}:latest

      - name: Cleanup old images
        run: docker system prune -af